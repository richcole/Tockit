AC_PREREQ(2.57)
# file that is always there, sanity check
AC_INIT(sarl/set.h)

cd ${srcdir}; absolute_srcdir=`pwd`; cd -;

# library and code version
SARL_MAJOR=0
SARL_MINOR=1
SARL_BETA=0
AC_SUBST(SARL_MAJOR)
AC_SUBST(SARL_MINOR)
AC_SUBST(SARL_BETA)
SARL_VERSION=$SARL_MAJOR.$SARL_MINOR.$SARL_BETA
SARL_FULLV=$SARL_VERSION
AC_SUBST(SARL_FULLV)
AC_SUBST(SARL_VERSION)
LIBSARL_LA=" ${absolute_srcdir}/libsarl.la "
AC_SUBST(LIBSARL_LA)

#VERSION_INFO="-version-info $SARL_MAJOR$SARL_MINOR:0:$SARL_BETA"
VERSION_INFO="-version-info $SARL_MINOR:0:$SARL_BETA"
AC_SUBST(VERSION_INFO)
VERSION_INFO_PLUSPLUS="-version-info $SARL_MINOR:0:$SARL_BETA"
AC_SUBST(VERSION_INFO_PLUSPLUS)
VERSION_INFO_PYSARL="-version-info $SARL_MINOR:0:$SARL_BETA"
AC_SUBST(VERSION_INFO_PLUSPLUS)

dnl libtool versioning
LT_RELEASE=$SARL_MAJOR.$SARL_MINOR

VERSION=$SARL_VERSION
PACKAGE=sarl

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE($PACKAGE, $VERSION)
AM_MAINTAINER_MODE

AC_CANONICAL_HOST
AC_ISC_POSIX

AC_PROG_CXX
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AM_PROG_CC_C_O
AC_HEADER_STDC
AC_CHECK_HEADERS([limits.h stdlib.h string.h sys/time.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_CHECK_FUNCS([gettimeofday])

AC_SYS_LARGEFILE
AC_ARG_PROGRAM
AC_DISABLE_FAST_INSTALL
AC_DISABLE_STATIC
AM_PROG_LIBTOOL

AC_CHECK_PYTHON_DIRS
AC_PKG_SWIG(1.3.16)

#
# Allow debug/profile build
#

SARL_CF=" -O3 -DNDEBUG -I/nothing -DG_DISABLE_ASSERT -ffast-math "
SARL_LD=""
AC_ARG_ENABLE(debug,
[--enable-debug            compile with -g and -O0 debug information],
[
  if test x$enableval = xyes; then
	echo setting debug mode to on...;
	SARL_CF=" -O0 -g -pipe -Wall "; 
  else
	echo setting debug mode to off...
  fi
])

AC_ARG_ENABLE(profile,
[--enable-profile            compile with profile debug information],
[
  if test x$enableval = xyes; then
        echo setting profile mode to on...
        SARL_CF=" -O0 -g -pg -fprofile-arcs -ftest-coverage "; 
  else
        echo setting profile mode to off...
  fi
])

#
# Python (copied from swig)
#
AC_ARG_WITH(python,[  --with-python=path       Set location of Python executable
],[ PYBIN="$withval"], [PYBIN=])

# First figure out the name of the Python executable

if test -z "$PYBIN"; then
AC_CHECK_PROGS(PYTHON, $prefix/bin/python python python2.4 python2.3 python2.2 python2.1 python2.0 python1.6 python1.5 python1.4 python)
else
PYTHON="$PYBIN"
fi

if test -n "$PYTHON"; then
    AC_MSG_CHECKING(for Python prefix)
    PYPREFIX=`($PYTHON -c "import sys; print sys.prefix") 2>/dev/null`
    AC_MSG_RESULT($PYPREFIX)
    AC_MSG_CHECKING(for Python exec-prefix)
    PYEPREFIX=`($PYTHON -c "import sys; print sys.exec_prefix") 2>/dev/null`
    AC_MSG_RESULT($PYEPREFIX)


    # Note: I could not think of a standard way to get the version string from different versions.
    # This trick pulls it out of the file location for a standard library file.

    AC_MSG_CHECKING(for Python version)

    # Need to do this hack since autoconf replaces __file__ with the name of the configure file
    filehack="file__"
    PYVERSION=`($PYTHON -c "import string,operator; print operator.getitem(string.split(string.__$filehack,'/'),-2)")`
    AC_MSG_RESULT($PYVERSION)

    # Set the include directory

    AC_MSG_CHECKING(for Python header files)
    if test -r $PYPREFIX/include/$PYVERSION/Python.h; then
        PYINCLUDE="-I$PYPREFIX/include/$PYVERSION -I$PYEPREFIX/lib/$PYVERSION/config"
    fi
    if test -z "$PYINCLUDE"; then
        if test -r $PYPREFIX/include/Py/Python.h; then
            PYINCLUDE="-I$PYPREFIX/include/Py -I$PYEPREFIX/lib/python/lib"
        fi
    fi
    AC_MSG_RESULT($PYINCLUDE)

    # Set the library directory blindly.   This probably won't work with older versions
    AC_MSG_CHECKING(for Python library)
    dirs="$PYVERSION/config $PYVERSION/lib python/lib"
    for i in $dirs; do
        if test -d $PYEPREFIX/lib/$i; then
           PYLIB="$PYEPREFIX/lib/$i"
           break
        fi
    done
    if test -z "$PYLIB"; then
        AC_MSG_RESULT(Not found)
    else
        AC_MSG_RESULT($PYLIB)
    fi

    # Check for really old versions
    if test -r $PYLIB/libPython.a; then
         PYLINK="-lModules -lPython -lObjects -lParser"
    else
         PYLINK="-l$PYVERSION"
    fi
fi

# Only cygwin (Windows) needs the library for dynamic linking
case $ac_sys_system/$ac_sys_release in
CYGWIN*) PYTHONDYNAMICLINKING="-L$PYLIB $PYLINK"
         PYINCLUDE="-DUSE_DL_IMPORT $PYINCLUDE"
         ;;
*)PYTHONDYNAMICLINKING="";;
esac


AC_SUBST(PYINCLUDE)
AC_SUBST(PYLIB)
AC_SUBST(PYLINK)
AC_SUBST(PYTHONDYNAMICLINKING)


###############################################################################
###############################################################################
###############################################################################

CFLAGS="  $CFLAGS $SARL_CF "
CXXFLAGS="  $CXXFLAGS $SARL_CF "
LDFLAGS=" $LDFLAGS $SARL_LD -L/lib "

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(CXXCPPFLAGS)

if test "x${prefix}" = 'xNONE'; then
        prefix=${ac_default_prefix};
fi;
if test "x${exec_prefix}" = 'xNONE'; then
        exec_prefix=${ac_default_prefix};
fi;
PREFIX=${prefix};
SYSCONFDIR=`eval echo ${RPM_BUILD_ROOT}/${sysconfdir}`
EXECPREFIX=`eval echo ${RPM_BUILD_ROOT}/${exec_prefix}`
DOTFILE_ETC=`eval echo ${RPM_BUILD_ROOT}/etc`
ETC_PROFILED_DIR=`eval echo ${RPM_BUILD_ROOT}/etc/profile.d`
BINDIR=`eval echo ${RPM_BUILD_ROOT}/${bindir}`
LIBDIR=`eval echo ${RPM_BUILD_ROOT}/${libdir}`
INCLUDEDIR=`eval echo ${RPM_BUILD_ROOT}/${includedir}`
PREFIXSTR=`eval echo ${RPM_BUILD_ROOT}/${prefix}`
AC_DEFINE_UNQUOTED(PREFIX, std::string("$PREFIXSTR") )
AC_SUBST(PREFIX)
AC_SUBST(PREFIXSTR)
AC_SUBST(SYSCONFDIR)
AC_SUBST(DOTFILE_ETC)
AC_SUBST(ETC_PROFILED_DIR)
AC_SUBST(EXECPREFIX)
AC_SUBST(BINDIR)
AC_SUBST(LIBDIR)
AC_SUBST(INCLUDEDIR)

CLIENT_APP_CFLAGS="-I/usr/local/include"
CLIENT_APP_LIBS="-L/usr/local/lib -lsarl"
AC_SUBST(CLIENT_APP_CFLAGS)
AC_SUBST(CLIENT_APP_LIBS)
REQUIREMENTS=
AC_SUBST(REQUIREMENTS)

CLIENT_APP_PLUS_CFLAGS="-I/usr/local/include"
CLIENT_APP_PLUS_LIBS="-L/usr/local/lib -lsarl -lsarlplus"
AC_SUBST(CLIENT_APP_PLUS_CFLAGS)
AC_SUBST(CLIENT_APP_PLUS_LIBS)
REQUIREMENTS_PLUS="sarl"
AC_SUBST(REQUIREMENTS_PLUS)


#
# All done.
#
AC_OUTPUT([
Makefile
sarl/Makefile
sarl/cpp/Makefile
sarl/python/Makefile
testsuite/Makefile
testsuite/config/Makefile
testsuite/sarl.test/Makefile
testsuite/sampledata/Makefile
sarl.spec
sarl.pc
sarl++.pc
sarl-config
sarl++-config
],
[
chmod +x sarl-config
])

echo "



Configuration:

	Source code location:	${srcdir}
	Compiler:		${CC} 
	CFLAGS:			${CFLAGS} 
	LDFLAGS:		${LDFLAGS} 
"
echo "
	The $PACKAGE version $SARL_VERSION software package is (FIXME: really? GPLv2+)
        and Copyright (C) 2003 Richard Cole
"
