%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%Creator: xpdf/pdftops 3.00, a2ping.pl 2.77p
%%BoundingBox: 0 0 1409 981
%%DocumentMedia: plain 1409 981 0 () ()
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F2_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
q
q
[1 0 0 1 0 0] cm
q
[1 0 0 1 0 0] cm
0 0 1409 981 re
W
q
0 0 1409 981 re
W
1 w
2 J
0 j
10 M
[] 0 d
q
/DeviceRGB {} cs
[1 1 1] sc
0 0 1409 981 re
f
2.88 w
/DeviceRGB {} CS
[0 0 0] SC
914.03 392.37 m
1182 238.48 l
S
1182 402.31 m
1182 238.48 l
S
1182 238.48 m
701.92 30.2 l
S
176.79 228.54 m
701.92 30.2 l
S
668.28 883.87 m
914.03 720.04 l
S
422.53 392.37 m
176.79 228.54 l
S
176.79 392.37 m
176.79 228.54 l
S
1182 566.14 m
1182 402.31 l
S
914.03 556.21 m
1182 402.31 l
S
422.53 720.04 m
176.79 556.21 l
S
914.03 720.04 m
1182 566.14 l
S
668.28 883.87 m
422.53 720.04 l
S
422.53 556.21 m
422.53 392.37 l
S
668.28 556.21 m
422.53 392.37 l
S
668.28 883.87 m
668.28 720.04 l
S
668.28 720.04 m
914.03 556.21 l
S
914.03 720.04 m
914.03 556.21 l
S
422.53 720.04 m
422.53 556.21 l
S
668.28 720.04 m
422.53 556.21 l
S
914.03 556.21 m
914.03 392.37 l
S
668.28 556.21 m
914.03 392.37 l
S
668.28 720.04 m
668.28 556.21 l
S
176.79 556.21 m
176.79 392.37 l
S
422.53 556.21 m
176.79 392.37 l
S
/DeviceRGB {} cs
[0 0 0] sc
1210.76 238.48 m
1210.76 222.59 1197.89 209.72 1182 209.72 c
1166.12 209.72 1153.24 222.59 1153.24 238.48 c
1153.24 254.36 1166.12 267.24 1182 267.24 c
1197.89 267.24 1210.76 254.36 1210.76 238.48 c
h
f
1210.76 238.48 m
1210.76 222.59 1197.89 209.72 1182 209.72 c
1166.12 209.72 1153.24 222.59 1153.24 238.48 c
1153.24 254.36 1166.12 267.24 1182 267.24 c
1197.89 267.24 1210.76 254.36 1210.76 238.48 c
h
S
730.68 30.2 m
730.68 14.31 717.8 1.44 701.92 1.44 c
686.04 1.44 673.16 14.31 673.16 30.2 c
673.16 46.08 686.04 58.96 701.92 58.96 c
717.8 58.96 730.68 46.08 730.68 30.2 c
h
f
730.68 30.2 m
730.68 14.31 717.8 1.44 701.92 1.44 c
686.04 1.44 673.16 14.31 673.16 30.2 c
673.16 46.08 686.04 58.96 701.92 58.96 c
717.8 58.96 730.68 46.08 730.68 30.2 c
h
S
942.79 720.04 m
942.79 704.15 929.91 691.28 914.03 691.28 c
898.14 691.28 885.27 704.15 885.27 720.04 c
885.27 735.92 898.14 748.8 914.03 748.8 c
929.91 748.8 942.79 735.92 942.79 720.04 c
h
f
942.79 720.04 m
942.79 704.15 929.91 691.28 914.03 691.28 c
898.14 691.28 885.27 704.15 885.27 720.04 c
885.27 735.92 898.14 748.8 914.03 748.8 c
929.91 748.8 942.79 735.92 942.79 720.04 c
h
S
205.55 228.54 m
205.55 212.66 192.67 199.78 176.79 199.78 c
160.9 199.78 148.02 212.66 148.02 228.54 c
148.02 244.43 160.9 257.3 176.79 257.3 c
192.67 257.3 205.55 244.43 205.55 228.54 c
h
f
205.55 228.54 m
205.55 212.66 192.67 199.78 176.79 199.78 c
160.9 199.78 148.02 212.66 148.02 228.54 c
148.02 244.43 160.9 257.3 176.79 257.3 c
192.67 257.3 205.55 244.43 205.55 228.54 c
h
S
1210.76 402.31 m
1210.76 386.42 1197.89 373.55 1182 373.55 c
1166.12 373.55 1153.24 386.42 1153.24 402.31 c
1153.24 418.19 1166.12 431.07 1182 431.07 c
1197.89 431.07 1210.76 418.19 1210.76 402.31 c
h
f
1210.76 402.31 m
1210.76 386.42 1197.89 373.55 1182 373.55 c
1166.12 373.55 1153.24 386.42 1153.24 402.31 c
1153.24 418.19 1166.12 431.07 1182 431.07 c
1197.89 431.07 1210.76 418.19 1210.76 402.31 c
h
S
205.55 556.21 m
205.55 540.32 192.67 527.44 176.79 527.44 c
160.9 527.44 148.02 540.32 148.02 556.21 c
148.02 572.09 160.9 584.97 176.79 584.97 c
192.67 584.97 205.55 572.09 205.55 556.21 c
h
f
205.55 556.21 m
205.55 540.32 192.67 527.44 176.79 527.44 c
160.9 527.44 148.02 540.32 148.02 556.21 c
148.02 572.09 160.9 584.97 176.79 584.97 c
192.67 584.97 205.55 572.09 205.55 556.21 c
h
S
697.04 883.87 m
697.04 867.98 684.16 855.11 668.28 855.11 c
652.4 855.11 639.52 867.98 639.52 883.87 c
639.52 899.75 652.4 912.63 668.28 912.63 c
684.16 912.63 697.04 899.75 697.04 883.87 c
h
f
697.04 883.87 m
697.04 867.98 684.16 855.11 668.28 855.11 c
652.4 855.11 639.52 867.98 639.52 883.87 c
639.52 899.75 652.4 912.63 668.28 912.63 c
684.16 912.63 697.04 899.75 697.04 883.87 c
h
S
1210.76 566.14 m
1210.76 550.26 1197.89 537.38 1182 537.38 c
1166.12 537.38 1153.24 550.26 1153.24 566.14 c
1153.24 582.02 1166.12 594.9 1182 594.9 c
1197.89 594.9 1210.76 582.02 1210.76 566.14 c
h
f
1210.76 566.14 m
1210.76 550.26 1197.89 537.38 1182 537.38 c
1166.12 537.38 1153.24 550.26 1153.24 566.14 c
1153.24 582.02 1166.12 594.9 1182 594.9 c
1197.89 594.9 1210.76 582.02 1210.76 566.14 c
h
S
451.29 720.04 m
451.29 704.15 438.42 691.28 422.53 691.28 c
406.65 691.28 393.77 704.15 393.77 720.04 c
393.77 735.92 406.65 748.8 422.53 748.8 c
438.42 748.8 451.29 735.92 451.29 720.04 c
h
f
451.29 720.04 m
451.29 704.15 438.42 691.28 422.53 691.28 c
406.65 691.28 393.77 704.15 393.77 720.04 c
393.77 735.92 406.65 748.8 422.53 748.8 c
438.42 748.8 451.29 735.92 451.29 720.04 c
h
S
451.29 392.37 m
451.29 376.49 438.42 363.61 422.53 363.61 c
406.65 363.61 393.77 376.49 393.77 392.37 c
393.77 408.26 406.65 421.14 422.53 421.14 c
438.42 421.14 451.29 408.26 451.29 392.37 c
h
f
451.29 392.37 m
451.29 376.49 438.42 363.61 422.53 363.61 c
406.65 363.61 393.77 376.49 393.77 392.37 c
393.77 408.26 406.65 421.14 422.53 421.14 c
438.42 421.14 451.29 408.26 451.29 392.37 c
h
S
697.04 720.04 m
697.04 704.15 684.16 691.28 668.28 691.28 c
652.4 691.28 639.52 704.15 639.52 720.04 c
639.52 735.92 652.4 748.8 668.28 748.8 c
684.16 748.8 697.04 735.92 697.04 720.04 c
h
f
697.04 720.04 m
697.04 704.15 684.16 691.28 668.28 691.28 c
652.4 691.28 639.52 704.15 639.52 720.04 c
639.52 735.92 652.4 748.8 668.28 748.8 c
684.16 748.8 697.04 735.92 697.04 720.04 c
h
S
942.79 556.21 m
942.79 540.32 929.91 527.44 914.03 527.44 c
898.14 527.44 885.27 540.32 885.27 556.21 c
885.27 572.09 898.14 584.97 914.03 584.97 c
929.91 584.97 942.79 572.09 942.79 556.21 c
h
f
942.79 556.21 m
942.79 540.32 929.91 527.44 914.03 527.44 c
898.14 527.44 885.27 540.32 885.27 556.21 c
885.27 572.09 898.14 584.97 914.03 584.97 c
929.91 584.97 942.79 572.09 942.79 556.21 c
h
S
451.29 556.21 m
451.29 540.32 438.42 527.44 422.53 527.44 c
406.65 527.44 393.77 540.32 393.77 556.21 c
393.77 572.09 406.65 584.97 422.53 584.97 c
438.42 584.97 451.29 572.09 451.29 556.21 c
h
f
451.29 556.21 m
451.29 540.32 438.42 527.44 422.53 527.44 c
406.65 527.44 393.77 540.32 393.77 556.21 c
393.77 572.09 406.65 584.97 422.53 584.97 c
438.42 584.97 451.29 572.09 451.29 556.21 c
h
S
942.79 392.37 m
942.79 376.49 929.91 363.61 914.03 363.61 c
898.14 363.61 885.27 376.49 885.27 392.37 c
885.27 408.26 898.14 421.14 914.03 421.14 c
929.91 421.14 942.79 408.26 942.79 392.37 c
h
f
942.79 392.37 m
942.79 376.49 929.91 363.61 914.03 363.61 c
898.14 363.61 885.27 376.49 885.27 392.37 c
885.27 408.26 898.14 421.14 914.03 421.14 c
929.91 421.14 942.79 408.26 942.79 392.37 c
h
S
697.04 556.21 m
697.04 540.32 684.16 527.44 668.28 527.44 c
652.4 527.44 639.52 540.32 639.52 556.21 c
639.52 572.09 652.4 584.97 668.28 584.97 c
684.16 584.97 697.04 572.09 697.04 556.21 c
h
f
697.04 556.21 m
697.04 540.32 684.16 527.44 668.28 527.44 c
652.4 527.44 639.52 540.32 639.52 556.21 c
639.52 572.09 652.4 584.97 668.28 584.97 c
684.16 584.97 697.04 572.09 697.04 556.21 c
h
S
205.55 392.37 m
205.55 376.49 192.67 363.61 176.79 363.61 c
160.9 363.61 148.02 376.49 148.02 392.37 c
148.02 408.26 160.9 421.14 176.79 421.14 c
192.67 421.14 205.55 408.26 205.55 392.37 c
h
f
205.55 392.37 m
205.55 376.49 192.67 363.61 176.79 363.61 c
160.9 363.61 148.02 376.49 148.02 392.37 c
148.02 408.26 160.9 421.14 176.79 421.14 c
192.67 421.14 205.55 408.26 205.55 392.37 c
h
S
0 J
2 j
[11.5 11.5] 0 d
1182 209.72 m
1182 209.72 l
S
914.03 691.28 m
914.03 691.28 l
S
914.03 748.8 m
914.03 748.8 l
S
176.79 199.78 m
176.79 199.78 l
S
1182 373.55 m
1182 373.55 l
S
176.79 527.44 m
176.79 527.44 l
S
176.79 584.97 m
176.79 584.97 l
S
668.28 912.63 m
668.28 912.63 l
S
1182 537.38 m
1182 537.38 l
S
1182 594.9 m
1182 594.9 l
S
422.53 691.28 m
422.53 691.28 l
S
422.53 748.8 m
422.53 748.8 l
S
422.53 363.61 m
422.53 363.61 l
S
668.28 748.8 m
668.28 748.8 l
S
914.03 527.44 m
914.03 527.44 l
S
422.53 527.44 m
422.53 527.44 l
S
914.03 363.61 m
914.03 363.61 l
S
668.28 584.97 m
668.28 584.97 l
S
176.79 363.61 m
176.79 363.61 l
S
/DeviceRGB {} cs
[1 1 1] sc
1013.82 176.25 336.37 33.47 re
f
2 J
0 j
10 M
[] 0 d
1013.82 176.25 336.37 33.47 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 1019.95 182.39] Tm
0 0 Td
/F2_0 10 Tf
(SequentialList,Concrete) 106.16 Tj
/DeviceRGB {} cs
[1 1 1] sc
820.21 657.81 187.64 33.47 re
f
820.21 657.81 187.64 33.47 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 826.34 663.95] Tm
0 0 Td
/F2_0 10 Tf
(List,Interface) 57.25 Tj
/DeviceRGB {} cs
[1 1 1] sc
885.27 748.8 57.51 33.46 re
f
885.27 748.8 57.51 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 891.41 754.94] Tm
0 0 Td
/F2_0 10 Tf
(List) 15.56 Tj
/DeviceRGB {} cs
[1 1 1] sc
39.4 166.32 274.78 33.46 re
f
39.4 166.32 274.78 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 45.53 172.45] Tm
0 0 Td
/F2_0 10 Tf
(SortedSet,Concrete) 87.82 Tj
/DeviceRGB {} cs
[1 1 1] sc
1017.49 340.08 329.02 33.47 re
f
1017.49 340.08 329.02 33.47 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 1023.63 346.22] Tm
0 0 Td
/F2_0 10 Tf
(SequentialList,Abstract) 102.27 Tj
/DeviceRGB {} cs
[1 1 1] sc
40.81 493.98 271.95 33.46 re
f
40.81 493.98 271.95 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 46.94 500.12] Tm
0 0 Td
/F2_0 10 Tf
(SortedSet,Interface) 86.16 Tj
/DeviceRGB {} cs
[1 1 1] sc
105.87 584.97 141.83 33.46 re
f
105.87 584.97 141.83 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 112.01 591.1] Tm
0 0 Td
/F2_0 10 Tf
(SortedSet) 44.47 Tj
/DeviceRGB {} cs
[1 1 1] sc
594.42 912.63 147.72 66.93 re
f
594.42 912.63 147.72 66.93 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 600.56 952.23] Tm
0 0 Td
/F2_0 10 Tf
(Object) 28.9 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 600.56 918.77] Tm
0 0 Td
/F2_0 10 Tf
(Collection) 43.9 Tj
/DeviceRGB {} cs
[1 1 1] sc
1015.23 503.91 333.55 33.47 re
f
1015.23 503.91 333.55 33.47 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 1021.36 510.05] Tm
0 0 Td
/F2_0 10 Tf
(SequentialList,Interface) 104.5 Tj
/DeviceRGB {} cs
[1 1 1] sc
1080.3 594.9 203.41 33.47 re
f
1080.3 594.9 203.41 33.47 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 1086.43 601.04] Tm
0 0 Td
/F2_0 10 Tf
(SequentialList) 62.81 Tj
/DeviceRGB {} cs
[1 1 1] sc
331.46 657.81 182.15 33.47 re
f
331.46 657.81 182.15 33.47 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 337.6 663.95] Tm
0 0 Td
/F2_0 10 Tf
(Set,Interface) 56.7 Tj
/DeviceRGB {} cs
[1 1 1] sc
396.53 748.8 52.01 33.46 re
f
396.53 748.8 52.01 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 402.66 754.94] Tm
0 0 Td
/F2_0 10 Tf
(Set) 15.01 Tj
/DeviceRGB {} cs
[1 1 1] sc
330.05 330.15 184.97 33.46 re
f
330.05 330.15 184.97 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 336.18 336.28] Tm
0 0 Td
/F2_0 10 Tf
(Set,Concrete) 58.36 Tj
/DeviceRGB {} cs
[1 1 1] sc
535.54 748.8 265.48 33.46 re
f
535.54 748.8 265.48 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 541.68 754.94] Tm
0 0 Td
/F2_0 10 Tf
(AbstractCollection) 80.58 Tj
/DeviceRGB {} cs
[1 1 1] sc
822.47 493.98 183.11 33.46 re
f
822.47 493.98 183.11 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 828.61 500.12] Tm
0 0 Td
/F2_0 10 Tf
(List,Abstract) 55.02 Tj
/DeviceRGB {} cs
[1 1 1] sc
333.72 493.98 177.62 33.46 re
f
333.72 493.98 177.62 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 339.86 500.12] Tm
0 0 Td
/F2_0 10 Tf
(Set,Abstract) 54.47 Tj
/DeviceRGB {} cs
[1 1 1] sc
818.79 330.15 190.47 33.46 re
f
818.79 330.15 190.47 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 824.93 336.28] Tm
0 0 Td
/F2_0 10 Tf
(List,Concrete) 58.91 Tj
/DeviceRGB {} cs
[1 1 1] sc
584.38 584.97 167.8 66.93 re
f
584.38 584.97 167.8 66.93 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 590.52 624.57] Tm
0 0 Td
/F2_0 10 Tf
(Cloneable) 45.02 Tj
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 590.52 591.1] Tm
0 0 Td
/F2_0 10 Tf
(Serializable) 51.68 Tj
/DeviceRGB {} cs
[1 1 1] sc
43.07 330.15 267.43 33.46 re
f
43.07 330.15 267.43 33.46 re
S
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
[2.88 0 0 2.88 49.21 336.28] Tm
0 0 Td
/F2_0 10 Tf
(SortedSet,Abstract) 83.93 Tj
Q
Q
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
